// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestFullAPI.Infrastructure.Context;

namespace RestFullAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestFullAPI.Models.Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 993, DateTimeKind.Local).AddTicks(2432),
                            Password = "123",
                            Status = 1,
                            UserName = "beast"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 993, DateTimeKind.Local).AddTicks(3167),
                            Password = "123",
                            Status = 1,
                            UserName = "savage"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 993, DateTimeKind.Local).AddTicks(3174),
                            Password = "123",
                            Status = 1,
                            UserName = "raider"
                        });
                });

            modelBuilder.Entity("RestFullAPI.Models.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 989, DateTimeKind.Local).AddTicks(8738),
                            Description = "Best MMA boxing gloves here..!",
                            Name = "UFC Gloves",
                            Slug = "ufc-gloves",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 991, DateTimeKind.Local).AddTicks(6562),
                            Description = "Best MMA equipments here..!",
                            Name = "Protected Equipment",
                            Slug = "protected-equipment",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 1, 17, 13, 50, 6, 991, DateTimeKind.Local).AddTicks(6581),
                            Description = "Best MMA bandages here..!",
                            Name = "Hand Wraps",
                            Slug = "hand-wraps",
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
